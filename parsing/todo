
=================================
            TODAY :
=================================

--> TO COMMIT :
        // None
        // [x] heredoc name generation and placement

// [ ] syntax error ; modify messages
// [ ] Expand in herdoc if delimiter is not literal:
        # search and expand , ndup join + join 
// [ ] redirections after and before cmd 
// FIXME args handling : 
        // echo $ $$ $'' $"" "$USER" '$USER' $'USER' $"USER" $dhfgh $USER $'sdgdh' $"dgdfh"
// [ ] << l cat doesnt execute, will if 

=================================
            LATER :
=================================

// [ ] Exit status 
// [ ] signals
// [ ] redirections by command if fails stop and move to next command


=================================
            UTILS :
=================================

// [x] handle heredoc
        // .heredoc file > if exists join the name with an incremented i = 1 to change the name 
        // work with 2 files one we read from and the second we return (points at the begining).
        // open readline and return the file when the delimiter is encountered
        //  pass it as an infile to the command.


// printf(">>> curr -%s- type: %d\n", curr->value, curr->type);

=================================
            TESTS :
=================================

echo "" "" 

echo "ls" "-la" 

echo "ls"'-la'

echo "'$USER'"

L""S"" 

l""s 

export cmd="ls    -la"  then: $cmd or echo $cmd or echo "$cmd"

export cmd="ls    -la"  then: export cmd2="$cmd" and then $cmd2

export cmd="[tab]ls [tab] -la  "

"abcd"$PWD'ff'

// < ./parsing/todo cmd arg1 arg2 | cmd2 arg1 arg2 > out1 > out2 