
=================================
            TODAY :
=================================

--> TO COMMIT :

        // None
        // refactored heredoc
        // FIXED Double free in gc ( was because of fds pointer)
        // FIXED > ls should not be sent as node
        // FIXED << k < l < Makefile ls > f | ls, in normal cicumstances it must execute ls 
                except if u hit ctrl+c must not execute other cmds

        // FIXED herdoc opening in case of files errors ex : < l < Makefile ls > f << l cat
                        ; displays error but must display heredoc tho
        // DONE refactor redirections
        // NOTE refactor quotes
        // FIXME figure out how to get rid of that $? leak from itoa
        // FIXED << k ls > $cmd | ls , didnt found the right delimiter
        // FIXED ls > $cmd, must not exit 

        // FIXED args handling : 
                // echo $ $$ $'' $"" "$USER" '$USER' $'USER' $"USER" $dhfgh $USER $'sdgdh' $"dgdfh"

--> TO DO :

        // [ ] norm + refactor + drw scheema
                // [x] tokenization 
                // [ ] quotes 
                        // [ ] norm it
                // [x] expanding 
                        // FIXED if red before dont expand
                        // [x] refactor : is_after_red.
                // [x] syntax
                        // [x] syntax error ; modify messages
                        // [x] norm it
                // [x] redirections 
                        // [x] redirections after and before cmd
                        # < Makefile cat > out1 > out2 | ls > out3 > out4
                        // [x] Expand in herdoc if delimiter is not literal:
                        // [x] when syntax error dont execute
                        // [x] norm it
                // [x] heredoc
                // [x] args handling 

                // [x] Exit status $?
                        // FIXED IOCTL !!
                        // FIXED export cmd="ls      -la" ; then ls > $cmd  => must be $cmd: ambiguous redirect

=================================
            LATER :
=================================

// [x] signals
        // FIXME study
// [x] signals inside herdoc
        // [x] Ctrl + D acts like a delimiter is found except it doesnt add \n to the last
        // [x] Ctrl + C exits from the herdoc and stops any execution after
// [x] redirections by command if fails stop and move to next command
// [x] syntax error must be fixed : ls > ''o for example.

=================================
            UTILS :
=================================


// printf(">>> curr -%s- type: %d\n", curr->value, curr->type);
// printf(">>> tmp -%s- type: %d in: %d   out: %d\n", tmp->value, tmp->type, tmp->infile, tmp->outfile);
 // printf("after tokenzing\n");
    // print_list(list);


=================================
            TESTS :
=================================

echo "" "" 

echo "ls" "-la" 

echo "ls"'-la'

echo "'$USER'"

L""S"" 

l""s 

export cmd="ls    -la"  then: $cmd or echo $cmd or echo "$cmd"

export cmd="ls    -la"  then: export cmd2="$cmd" and then $cmd2

export cmd="[tab]ls [tab] -la  "

"abcd"$PWD'ff'

// < ./parsing/todo cmd arg1 arg2 | cmd2 arg1 arg2 > out1 > out2 


echo $dhfgh $USER


